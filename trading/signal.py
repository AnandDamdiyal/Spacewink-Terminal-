from typing import List
import pandas as pd
from pandas.api.types import CategoricalDtype


class Signal:
    """
    A signal generated by a trading strategy.
    """

    def __init__(self, symbol: str, timestamp: pd.Timestamp, action: str):
        """
        Parameters
        ----------
        symbol : str
            The symbol of the security associated with the signal.
        timestamp : pd.Timestamp
            The timestamp of the signal.
        action : str
            The action associated with the signal. Must be one of 'BUY', 'SELL', or 'HOLD'.
        """
        self.symbol = symbol
        self.timestamp = timestamp
        self.action = action

    def __repr__(self):
        return f'Signal({self.symbol}, {self.timestamp}, {self.action})'

    def __str__(self):
        return f'{self.action} {self.symbol} at {self.timestamp}'

    @classmethod
    def from_dataframe(cls, df: pd.DataFrame) -> List['Signal']:
        """
        Create a list of Signal objects from a DataFrame.

        Parameters
        ----------
        df : pd.DataFrame
            The DataFrame containing the signal data. Must have columns for 'symbol', 'timestamp', and 'action'.

        Returns
        -------
        List[Signal]
            The list of Signal objects.
        """
        df['timestamp'] = pd.to_datetime(df['timestamp'])
        df['action'] = df['action'].astype(CategoricalDtype(['BUY', 'SELL', 'HOLD']))
        signals = []
        for row in df.itertuples(index=False):
            signals.append(cls(row.symbol, row.timestamp, row.action))
        return signals
